<UserControl x:Class="Izi.Travel.Shell.Mtg.Views.Quiz.QuizView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:extensions="clr-namespace:Izi.Travel.Shell.Core.Components.Extensions"
             xmlns:controls="clr-namespace:Izi.Travel.Shell.Core.Controls"
             xmlns:quiz="clr-namespace:Izi.Travel.Shell.Mtg.ViewModels.Quiz"
             xmlns:converters="clr-namespace:Izi.Travel.Shell.Core.Converters"
             
             xmlns:flyout="clr-namespace:Izi.Travel.Shell.Core.Controls.Flyout"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:behaviors="clr-namespace:Izi.Travel.Shell.Core.Components.Behaviors"
             mc:Ignorable="d">

    <!-- Resources -->
    <UserControl.Resources>

        <!-- Converters -->
        <converters:DivideConverter x:Key="CountToHeightConverter" 
                                    Value="400" />

        <converters:BoolToObjectConverter x:Key="IsCorrectToBackgroundConverter" 
                                          PositiveValue="{StaticResource IziTravelGreenBrush}" 
                                          NegativeValue="{StaticResource IziTravelVioletBrush}" />

        <converters:BoolToObjectConverter x:Key="IsCorrectToImageConverter" 
                                          PositiveValue="/Assets/Images/image.quiz.correct.png" 
                                          NegativeValue="/Assets/Images/image.quiz.wrong.png" />

        <converters:BoolToObjectConverter x:Key="IsCorrectToTextConverter" 
                                          PositiveValue="{Binding LocalizedResources.QuizCorrectResult, Source={StaticResource LocalizedStrings}}" 
                                          NegativeValue="{Binding LocalizedResources.QuizIncorrectResult, Source={StaticResource LocalizedStrings}}" />

        <converters:BoolToObjectConverter x:Key="IsOverflowedToScrollBarVisibilityConverter">
            <converters:BoolToObjectConverter.PositiveValue>
                <ScrollBarVisibility>Auto</ScrollBarVisibility>
            </converters:BoolToObjectConverter.PositiveValue>
            <converters:BoolToObjectConverter.NegativeValue>
                <ScrollBarVisibility>Disabled</ScrollBarVisibility>
            </converters:BoolToObjectConverter.NegativeValue>
        </converters:BoolToObjectConverter>

        <!-- Brushes -->
        <LinearGradientBrush x:Key="QuizBackgroundBrush" StartPoint="0,1" EndPoint="1,0">
            <GradientStop Offset="0.0" Color="{StaticResource IziTravelBlueColor}" />
            <GradientStop Offset="1.0" Color="{StaticResource IziTravelQuizBlueColor}" />
        </LinearGradientBrush>

    </UserControl.Resources>

    <!-- Flyouts -->
    <flyout:FlyoutBase.AttachedFlyouts>
        <flyout:Flyout IsFullScreen="True"
                       Background="{StaticResource QuizBackgroundBrush}"
                       flyout:FlyoutBase.IsOpen="{Binding FlyoutQuizCommentViewModel.IsOpen, Mode=TwoWay}"
                       CloseOnNavigation="False">
            <flyout:Flyout.Content>
                <Grid Margin="25,40,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0"
                               Text="{Binding LocalizedResources.LabelComment, Source={StaticResource LocalizedStrings}, Converter={StaticResource StringToUpperConverter}}" 
                               Foreground="{StaticResource IziTravelLightBrush}"  
                               Style="{StaticResource FlyoutTitleStyle}" />

                    <ScrollViewer Grid.Row="1">
                        <i:Interaction.Behaviors>
                            <behaviors:ScrollViewerBehavior ResetVerticalOffsetTrigger="{Binding FlyoutQuizCommentViewModel.ResetVerticalOffsetTrigger}" />
                        </i:Interaction.Behaviors>
                        <controls:ExpandableTextBlock Margin="0,0,20,20"
                                                      IsExpanded="True"
                                                      Text="{Binding FlyoutQuizCommentViewModel.Comment}"
                                                      Foreground="{StaticResource IziTravelLightBrush}"
                                                      FontFamily="{StaticResource IziTravelFontFamilySegoeNormal}"
                                                      FontSize="{StaticResource IziTravelFontSizeNormal}" />
                    </ScrollViewer>
                </Grid>
            </flyout:Flyout.Content>
        </flyout:Flyout>
    </flyout:FlyoutBase.AttachedFlyouts>

    <!-- Layout -->
    <Grid x:Name="RootGrid" 
          extensions:AnimationExtensions.IsPlaying="{Binding IsActive}">
        <!-- Common startup animation -->
        <extensions:AnimationExtensions.Storyboard>
            <Storyboard extensions:AnimationExtensions.CompletedCommand="{Binding AnimationStartupCompletedCommand}">
                <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity"
                                 BeginTime="0:0:0.300" Duration="0:0:0.500" From="0.0" To="1.0">
                    <DoubleAnimation.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" Exponent="2" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="ImageBackground" Storyboard.TargetProperty="Opacity"
                                 BeginTime="0:0:0.300" Duration="0:0:0.500" From="0.0" To="1.0">
                    <DoubleAnimation.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" Exponent="2" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="TextQuestion" Storyboard.TargetProperty="Opacity"
                                 BeginTime="0:0:0.300" Duration="0:0:0.500" From="0.0" To="1.0">
                    <DoubleAnimation.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" Exponent="2" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="Shadow" Storyboard.TargetProperty="Opacity"
                                 BeginTime="0:0:0.300" Duration="0:0:0.500" From="0.0" To="1.0">
                    <DoubleAnimation.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" Exponent="2" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>
        </extensions:AnimationExtensions.Storyboard>

        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="405" />
        </Grid.RowDefinitions>

        <!-- Background -->
        <Border x:Name="Background" 
                Grid.Row="0" Grid.RowSpan="2"
                Background="{StaticResource QuizBackgroundBrush}"
                Opacity="0.0" />

        <!-- Background Image -->
        <Image x:Name="ImageBackground" 
               Grid.Row="0" Grid.RowSpan="2"
               Source="/Assets/Images/image.quiz.background.png"
               Opacity="0.0" 
               VerticalAlignment="Center" 
               HorizontalAlignment="Center"
               Stretch="None" />

        <!-- Question -->
        <Grid x:Name="GridQuestion"
              Grid.Row="0" 
              Margin="0,25,0,25"
              Visibility="{Binding IsQuestionVisible, Converter={StaticResource BoolToVisibilityConverter}}"
              extensions:AnimationExtensions.IsPlaying="{Binding IsAnswerExpanded, Converter={StaticResource BoolToOppositeConverter}}">

            <extensions:AnimationExtensions.Storyboard>
                <Storyboard extensions:AnimationExtensions.CompletedCommand="{Binding AnimationExpandAnswerCompletedCommand}">
                    <DoubleAnimation Storyboard.TargetName="GridExpandedAnswer" 
                                     Storyboard.TargetProperty="Opacity"
                                     Duration="0:0:0.200" From="1.0" To="0.0">
                        <DoubleAnimation.EasingFunction>
                            <ExponentialEase EasingMode="EaseIn" Exponent="2" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>                  
                    <DoubleAnimation Storyboard.TargetName="GridQuestion" Storyboard.TargetProperty="Opacity"
                                     BeginTime="0:0:0.100" Duration="0:0:0.200" From="0.0" To="1.0">
                        <DoubleAnimation.EasingFunction>
                            <ExponentialEase EasingMode="EaseIn" Exponent="2" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="ListAnswer" Storyboard.TargetProperty="Opacity"
                                     BeginTime="0:0:0.100" Duration="0:0:0.200" From="0.0" To="1.0">
                        <DoubleAnimation.EasingFunction>
                            <ExponentialEase EasingMode="EaseIn" Exponent="2" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>                    
                </Storyboard>
            </extensions:AnimationExtensions.Storyboard>

            <ScrollViewer VerticalScrollBarVisibility="{Binding ElementName=TextQuestion, Path=IsOverflowed, Converter={StaticResource IsOverflowedToScrollBarVisibilityConverter}}">
                <i:Interaction.Behaviors>
                    <behaviors:ScrollViewerBehavior ResetVerticalOffsetTrigger="{Binding ResetVerticalOffsetTrigger}" />
                </i:Interaction.Behaviors>
                <controls:ViewboxTextBlock x:Name="TextQuestion"
                                           Margin="25,18,25,25"
                                           Opacity="0"
                                           Text="{Binding Question}"
                                           Foreground="{StaticResource IziTravelLightBrush}"
                                           FontFamily="{StaticResource IziTravelFontFamilySegoeNormal}"
                                           MaxFontSize="{StaticResource IziTravelFontSizeLarge}"
                                           MinFontSize="30"
                                           TextAlignment="Center"
                                           TextWrapping="Wrap"
                                           VerticalAlignment="Center" />
            </ScrollViewer>
            <Rectangle x:Name="Shadow" 
                       Height="7"
                       Opacity="0"
                       VerticalAlignment="Bottom"
                       Visibility="{Binding ElementName=TextQuestion, Path=IsOverflowed, Converter={StaticResource BoolToVisibilityConverter}}">
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Offset="0" Color="#00000000" />
                        <GradientStop Offset="1" Color="#11000000" />
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Grid>

        <!-- Answers -->
        <ItemsControl x:Name="ListAnswer"
                      Grid.Row="1"
                      ItemsSource="{Binding Answers}"
                      Visibility="{Binding IsAnswersVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                      extensions:AnimationExtensions.IsPlaying="{Binding IsAnswered, Converter={StaticResource BoolToOppositeConverter}}">
            <!-- Answer Animation -->
            <extensions:AnimationExtensions.Storyboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ImageBackground"
                                     Storyboard.TargetProperty="Opacity"
                                     BeginTime="0:0:0.300" Duration="0:0:0.500" 
                                     From="0.0" To="1.0">
                        <DoubleAnimation.EasingFunction>
                            <CubicEase EasingMode="EaseIn" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </Storyboard>
            </extensions:AnimationExtensions.Storyboard>

            <!-- Template -->
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid x:Name="GridAnswer" Opacity="0.0"
                          Height="{Binding QuizViewModel.Answers.Length, Converter={StaticResource CountToHeightConverter}}"
                          Margin="15,0,15,0"
                          d:DataContext="{d:DesignInstance quiz:QuizAnswerViewModelExtended}"
                          extensions:AnimationExtensions.IsPlaying="{Binding AnimationEnabled}">

                        <Grid.RenderTransform>
                            <CompositeTransform x:Name="GridAnswerTransform" />
                        </Grid.RenderTransform>

                        <extensions:AnimationExtensions.Storyboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="GridAnswer"
                                                 Storyboard.TargetProperty="Opacity"
                                                 BeginTime="{Binding AnimationBeginTime}" Duration="0:0:0.300" 
                                                 From="0.0" To="1.0">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="2" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>                               
                                <DoubleAnimation Storyboard.TargetName="GridAnswerTransform"
                                                 Storyboard.TargetProperty="TranslateY"
                                                 BeginTime="{Binding AnimationBeginTime}" Duration="0:0:0.300" 
                                                 From="80" To="0">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="2" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </extensions:AnimationExtensions.Storyboard>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!-- Answer button -->
                        <CheckBox toolkit:TiltEffect.IsTiltEnabled="True"
                                  Command="{Binding QuizViewModel.SelectAnswerCommand}"
                                  CommandParameter="{Binding}"
                                  IsEnabled="{Binding IsEnabled}"
                                  IsChecked="{Binding IsChecked}">
                            <CheckBox.Template>
                                <ControlTemplate TargetType="CheckBox">
                                    <Grid Margin="0,0,0,20">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="PointerOver" />
                                                <VisualState x:Name="Pressed" />
                                                <VisualState x:Name="Disabled" />
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="CheckStates">
                                                <VisualState x:Name="Checked">
                                                    <Storyboard>
                                                        <Storyboard extensions:AnimationExtensions.CompletedCommand="{Binding QuizViewModel.AnimationAnswerHighlightCompleted}"
                                                                    extensions:AnimationExtensions.CompletedCommandParameter="{Binding}">
                                                            <DoubleAnimation Storyboard.TargetName="BorderAnswerHighlight"
                                                                             Storyboard.TargetProperty="Opacity"
                                                                             BeginTime="0:0:0.000" Duration="0:0:0.300" 
                                                                             From="0.0" To="1.0" />
                                                        </Storyboard>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unchecked" />
                                                <VisualState x:Name="Indeterminate" />
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="FocusStates">
                                                <VisualState x:Name="Focused" />
                                                <VisualState x:Name="Unfocused" />
                                                <VisualState x:Name="PointerFocused" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>

                                        <!-- Answer -->
                                        <Border x:Name="BorderAnswerBackground"
                                                Background="#20000000"  />

                                        <Border x:Name="BorderAnswerHighlight"
                                                Background="{Binding IsCorrect, Converter={StaticResource IsCorrectToBackgroundConverter}}" 
                                                Opacity="0.0" />

                                        <controls:ViewboxTextBlock x:Name="TextBlockAnswer"
                                                                   Text="{Binding Title}" 
                                                                   Foreground="{StaticResource IziTravelLightBrush}"
                                                                   FontFamily="{StaticResource IziTravelFontFamilySegoeNormal}"
                                                                   MaxFontSize="{StaticResource IziTravelFontSizeMedium}"
                                                                   MinFontSize="{StaticResource IziTravelFontSizeNormal}"
                                                                   Trim="True"
                                                                   TextAlignment="Center"
                                                                   VerticalAlignment="Center"
                                                                   HorizontalAlignment="Center"
                                                                   Margin="15,0"
                                                                   IsOverflowed="{Binding IsOverflowed, Mode=TwoWay}" />
                                    </Grid>
                                </ControlTemplate>
                            </CheckBox.Template>
                        </CheckBox>

                        <!-- Expand -->
                        <Button Grid.Column="1"
                                toolkit:TiltEffect.IsTiltEnabled="True"
                                Margin="1,0,0,20"
                                Visibility="{Binding IsOverflowed, Converter={StaticResource BoolToVisibilityConverter}}"
                                Command="{Binding QuizViewModel.ExpandAnswerCommand}"
                                CommandParameter="{Binding}">                            
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Grid extensions:AnimationExtensions.IsPlaying="{Binding IsChecked}">
                                        <extensions:AnimationExtensions.Storyboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BorderStretchHighlight"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 BeginTime="0:0:0.000" Duration="0:0:0.300" 
                                                                 From="0.0" To="1.0" />
                                            </Storyboard>
                                        </extensions:AnimationExtensions.Storyboard>
                                        
                                        <Border x:Name="BorderStretchBackground"
                                                Background="#20000000" 
                                                Width="70" />

                                        <Border x:Name="BorderStretchHighlight"
                                                Background="{Binding IsCorrect, Converter={StaticResource IsCorrectToBackgroundConverter}}" 
                                                Opacity="0.0" />

                                        <Image Source="/Assets/Icons/quiz.expand.png"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Stretch="None" />
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
                
        <!-- Result -->
        <StackPanel Grid.Row="1"
                    extensions:AnimationExtensions.IsPlaying="{Binding IsAnswered}"
                    Visibility="{Binding IsResultVisible, Converter={StaticResource BoolToVisibilityConverter}}">
            <!-- Result animation -->
            <extensions:AnimationExtensions.Storyboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ImageBackground"
                                     Storyboard.TargetProperty="Opacity"
                                     BeginTime="0:0:0.000" Duration="0:0:0.300" 
                                     From="1.0" To="0.0">
                        <DoubleAnimation.EasingFunction>
                            <CubicEase EasingMode="EaseOut" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="ListAnswer"
                                     Storyboard.TargetProperty="Opacity"
                                     BeginTime="0:0:0.000" Duration="0:0:0.200" 
                                     From="1.0" To="0.0">
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="ImageResult"
                                     Storyboard.TargetProperty="Opacity"
                                     BeginTime="0:0:0.300" Duration="0:0:0.300" 
                                     From="0.0" To="1.0">
                        <DoubleAnimation.EasingFunction>
                            <CubicEase EasingMode="EaseIn" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="ImageResultTransform"
                                     Storyboard.TargetProperty="TranslateY"
                                     BeginTime="0:0:0.300" Duration="0:0:0.300" 
                                     From="50" To="0" />
                    <DoubleAnimation Storyboard.TargetName="TextResult"
                                     Storyboard.TargetProperty="Opacity"
                                     BeginTime="0:0:0.300" Duration="0:0:0.300" 
                                     From="0.0" To="1.0">
                        <DoubleAnimation.EasingFunction>
                            <CubicEase EasingMode="EaseIn" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="PanelButtonResult"
                                     Storyboard.TargetProperty="Opacity"
                                     BeginTime="0:0:0.300" Duration="0:0:0.300" 
                                     From="0.0" To="1.0">
                        <DoubleAnimation.EasingFunction>
                            <CubicEase EasingMode="EaseIn" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </Storyboard>
            </extensions:AnimationExtensions.Storyboard>

            <!-- Image -->
            <Image x:Name="ImageResult"
                   Source="{Binding IsCorrect, Converter={StaticResource IsCorrectToImageConverter}}"
                   Stretch="None"
                   Margin="0,15,0,0"
                   Opacity="0.0">
                <Image.RenderTransform>
                    <CompositeTransform x:Name="ImageResultTransform" />
                </Image.RenderTransform>
            </Image>

            <!-- Text -->
            <TextBlock x:Name="TextResult"
                       Text="{Binding IsCorrect, Converter={StaticResource IsCorrectToTextConverter}}"
                       TextAlignment="Center"
                       Foreground="{StaticResource IziTravelLightBrush}" 
                       FontFamily="{StaticResource IziTravelFontFamilySegoeNormal}" 
                       FontSize="{StaticResource IziTravelFontSizeLarge}" 
                       Opacity="0.0" 
                       Margin="0,15,0,0" />

            <!-- Buttons -->
            <StackPanel x:Name="PanelButtonResult"
                        Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        Margin="0,55,0,0"
                        Opacity="0.0">
                <controls:ActionImageButton HorizontalAlignment="Center"
                                            ImageSource="/Assets/Icons/appbar.quiz.reset.png"
                                            Command="{Binding ResetAnswerCommand}"
                                            Style="{StaticResource LightCommandButtonStyle}" 
                                            Margin="30,0,30,0" />
                <controls:ActionImageButton HorizontalAlignment="Center"
                                            ImageSource="/Assets/Icons/appbar.quiz.comment.png"
                                            Command="{Binding FlyoutQuizCommentViewModel.OpenCommand}"
                                            Visibility="{Binding FlyoutQuizCommentViewModel.Comment, Converter={StaticResource NullOrEmptyStringToInvisibilityConverter}}"
                                            Style="{StaticResource LightCommandButtonStyle}" 
                                            Margin="30,0,30,0" />
            </StackPanel>
        </StackPanel>

        <!-- Answer Expanded View -->
        <Grid x:Name="GridExpandedAnswer"
              Grid.Row="0" Grid.RowSpan="2" 
              Margin="15,0,15,0"
              VerticalAlignment="Center"
              Height="320"
              Opacity="0.0"
              Visibility="{Binding IsExpandedAnswerVisible, Converter={StaticResource BoolToVisibilityConverter}}"
              extensions:AnimationExtensions.IsPlaying="{Binding IsAnswerExpanded}"
              RenderTransformOrigin="0.5,0.5">
            
            <Grid.RenderTransform>
                <CompositeTransform x:Name="TransformExpandedAnswer" />
            </Grid.RenderTransform>
            
            <!-- Animation -->
            <extensions:AnimationExtensions.Storyboard>
                <Storyboard extensions:AnimationExtensions.CompletedCommand="{Binding AnimationExpandAnswerCompletedCommand}">
                    <DoubleAnimation Storyboard.TargetName="GridQuestion" Storyboard.TargetProperty="Opacity"
                                     Duration="0:0:0.200" From="1.0" To="0.0">
                        <DoubleAnimation.EasingFunction>
                            <ExponentialEase EasingMode="EaseOut" Exponent="2" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="ListAnswer" Storyboard.TargetProperty="Opacity"
                                     Duration="0:0:0.200" From="1.0" To="0.0">
                        <DoubleAnimation.EasingFunction>
                            <ExponentialEase EasingMode="EaseOut" Exponent="2" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="GridExpandedAnswer" 
                                     Storyboard.TargetProperty="Opacity"
                                     BeginTime="0:0:0.100" Duration="0:0:0.200" 
                                     From="0.0" To="1.0">
                        <DoubleAnimation.EasingFunction>
                            <ExponentialEase EasingMode="EaseOut" Exponent="2" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>                   
                </Storyboard>
            </extensions:AnimationExtensions.Storyboard>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- Answer -->
            <Border Background="#20000000" />

            <ScrollViewer x:Name="ScrollViewerExpandedAnswer" Grid.Column="0">
                <TextBlock x:Name="TextExpandedAnswer"
                           Text="{Binding ExpandedAnswer.Title}" 
                           Foreground="{StaticResource IziTravelLightBrush}"
                           FontFamily="{StaticResource IziTravelFontFamilySegoeNormal}"
                           FontSize="{StaticResource IziTravelFontSizeMedium}"
                           TextWrapping="Wrap"      
                           TextAlignment="Center"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center" 
                           Padding="15"
                           SizeChanged="OnTextBlockExpandedAnswerSizeChanged" />
            </ScrollViewer>
            
            <!-- Collapse -->
            <Button Grid.Column="1"
                    toolkit:TiltEffect.IsTiltEnabled="True"
                    Margin="1,0,0,0"
                    Visibility="{Binding IsOverflowed, Converter={StaticResource BoolToVisibilityConverter}}"
                    Command="{Binding CollapseAnswerCommand}">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="BorderStretchBackground"
                                    Background="#20000000" 
                                    Width="70" />
                            <Image Source="/Assets/Icons/quiz.contract.png"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Stretch="None" />
                        </Grid>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </Grid>
    </Grid>
</UserControl>